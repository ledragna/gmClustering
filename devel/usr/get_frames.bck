{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import mdtraj as md\n",
    "import sys\n",
    "import scipy.spatial.distance as sd\n",
    "\n",
    "%load_ext autoreload"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "sys.path.append(\"/home/gmancini/Dropbox/appunti/Clustering/devel\")\n",
    "sys.path.append(\"/home/gmancini/Dropbox/appunti/Clustering/src\")\n",
    "import mdutils\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load one frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(36, 3)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "traj = md.load(\"dpap.pdb\")\n",
    "traj.xyz[0].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "np.savetxt(\"coord0.dat\",traj.xyz[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## USR with python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.35222182,  0.01906353, -0.04395259,  0.35195622,  0.02027721,\n",
       "       -0.02875145,  0.70689148,  0.07996982, -0.71981287,  0.61054772,\n",
       "        0.07276626, -0.35701188])"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "py_usr = mdutils.USR(traj.xyz[0])\n",
    "py_usr"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## with C, GSL"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "36"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "traj.xyz[0].shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "rm -f *.so *.o pyusr.py *.pyc *.a *.gch pyusr_wrap.c usr_wrap.c\n",
      "gcc usr.h -std=c99 -fPIC -O3 -ffast-math -ftree-vectorize -march=native -fomit-frame-pointer -I. -I/usr/include/python3.7/ -I/usr/lib64/python3.7/site-packages/numpy/core/include/ -c usr.c\n",
      "gcc -o usr.exe usr.o -lm -fopenmp -lgsl -lgslcblas -lblas\n"
     ]
    }
   ],
   "source": [
    "%%bash\n",
    "make clean  && make usr.exe "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 loops, best of 5: 22.3 ms per loop\n"
     ]
    }
   ],
   "source": [
    "%%timeit\n",
    "%%capture cap_out --no-stderr\n",
    "%%bash\n",
    "OMP_NUM_THREADS=4 ./usr.exe coord0.dat 36 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.35222182,  0.01906352, -0.04395271,  0.35195615,  0.02027721,\n",
       "       -0.02875005,  0.70689141,  0.07996982, -0.71981234,  0.61054763,\n",
       "        0.07276626, -0.35701096])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c_usr = cap_out.stdout\n",
    "c_usr = np.array(list(map(float,c_usr.split())))\n",
    "c_usr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3.22181704e-09, 8.62715721e-09, 1.18282757e-07, 6.84810638e-08,\n",
       "       1.44258976e-09, 1.39779682e-06, 6.71080017e-08, 3.36044312e-09,\n",
       "       5.30025635e-07, 9.13859558e-08, 6.87370300e-10, 9.24450912e-07])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.abs(py_usr - c_usr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## with swig"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'usr = np.zeros(12)\\nweights = np.ones(traj.n_atoms)\\nswig_usr = pyusr.pyUSR(traj.xyz[0]*10,weights,usr)\\nswig_usr'"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\"usr = np.zeros(12)\n",
    "weights = np.ones(traj.n_atoms)\n",
    "swig_usr = pyusr.pyUSR(traj.xyz[0]*10,weights,usr)\n",
    "swig_usr\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'swig_usr - py_res'"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\"swig_usr - py_res\"\"\""
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5rc1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
